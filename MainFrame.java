
import java.sql.Timestamp;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author acv
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester; 
    
    public MainFrame() {
        initComponents();
        rebuildSemesterComboBoxes();
        rebuildCourseComboBoxes();
        rebuildStudentComboBoxes();
    }
    
    //Loads semesters into comboboxes
    public void rebuildSemesterComboBoxes()
    {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        //Load semesters into comboBox, convert arrayList into an array
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        
        if (semesters.size() > 0)
        {
            //Sets the current label to be the first one in the semesters ArrayList
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        }
        else
        {
            //No semesters were added yet
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    //Loads courses into comboboxes
    public void rebuildCourseComboBoxes()
    { 
        //Get all of the available courses
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        //Create an ArrayList of courseCodes
        ArrayList<String> courseCodes=new ArrayList<>();
        //For each course, get the courseCode and add it to the ArrayList
        for(CourseEntry course:courses)
        {
            String courseCode=course.getCourseCode();
            courseCodes.add(courseCode);
        }
        //Load semesters into comboBox, convert arrayList into an array
        courseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courseCodes.toArray()));
        dropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courseCodes.toArray()));
        selectCourseForDisplayCourseListComboBox.setModel(new javax.swing.DefaultComboBoxModel(courseCodes.toArray()));
        dropCourseAdminComboBox.setModel(new javax.swing.DefaultComboBoxModel(courseCodes.toArray()));
    }
    //Loads Students into comboboxes
    public void rebuildStudentComboBoxes()
    { 
        //Get all of the available students
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        //Create an ArrayList of the all the students' names
        ArrayList<StudentEntry> studentNames=new ArrayList<>();
        //For each student, get their toString representation and add it to the arrayList
        for(StudentEntry student:students)
        {
            studentNames.add(student);
        }
        //Load semesters into combo boxes, convert arrayList into an array for both comboBoxes
        studentComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
        studentComboBox2.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
        studentComboBox3.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
        selectStudentForDropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        semesterLabel = new javax.swing.JLabel();
        semesterTextField1 = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        studentStatusLabel = new javax.swing.JPanel();
        studentIDLabel = new javax.swing.JLabel();
        studentIDTextField1 = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        addStudentSubmitButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        addStudentStatusLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        courseCodeLabel = new javax.swing.JLabel();
        courseCodeTextField = new javax.swing.JTextField();
        courseDescriptionLabel = new javax.swing.JLabel();
        seatsLabel = new javax.swing.JLabel();
        addCourseSubmitButton = new javax.swing.JButton();
        addCourseStatusLabel = new javax.swing.JLabel();
        seatsSpinner = new javax.swing.JSpinner();
        courseDescriptionTextField = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        selectCourseForDisplayCourseListComboBox = new javax.swing.JComboBox<>();
        displayCourseListOfStudentsButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        scheduledStudentsTable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        waitlistedStudentsTable = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        selectStudentForDropStudentComboBox = new javax.swing.JComboBox<>();
        dropStudentButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        dropStudentTextArea = new javax.swing.JTextArea();
        jPanel11 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        dropCourseAdminComboBox = new javax.swing.JComboBox<>();
        dropCourseAdminButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        dropCourseTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        courseComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        addCourseForStudentSubmitButton = new javax.swing.JButton();
        scheduleCourseStatusLabel = new javax.swing.JLabel();
        studentComboBox = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        displayScheduleButton = new javax.swing.JButton();
        studentComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayScheduleTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        displayCoursesButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayCoursesTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        dropCourseComboBox = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        studentComboBox3 = new javax.swing.JComboBox<>();
        dropCourseButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        dropCourseStudentTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();

        jLabel8.setText("jLabel8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        semesterLabel.setText("Semester Name:");

        semesterTextField1.setColumns(20);
        semesterTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semesterTextField1ActionPerformed(evt);
            }
        });

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(semesterLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(semesterTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addSemesterSubmitButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(semesterLabel)
                    .addComponent(semesterTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addSemesterSubmitButton)
                .addGap(25, 25, 25)
                .addComponent(addSemesterStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Semester", jPanel3);

        studentIDLabel.setText("Student ID: ");

        studentIDTextField1.setColumns(20);

        firstNameLabel.setText("First Name: ");

        firstNameTextField.setColumns(20);
        firstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextFieldActionPerformed(evt);
            }
        });

        lastNameLabel.setText("Last Name: ");

        lastNameTextField.setColumns(20);

        addStudentSubmitButton.setText("Submit");
        addStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentStatusLabelLayout = new javax.swing.GroupLayout(studentStatusLabel);
        studentStatusLabel.setLayout(studentStatusLabelLayout);
        studentStatusLabelLayout.setHorizontalGroup(
            studentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentStatusLabelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentStatusLabelLayout.createSequentialGroup()
                        .addComponent(studentIDLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentIDTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addStudentSubmitButton)
                    .addGroup(studentStatusLabelLayout.createSequentialGroup()
                        .addComponent(firstNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentStatusLabelLayout.createSequentialGroup()
                        .addComponent(lastNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(studentStatusLabelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(2, 2, 2)
                        .addComponent(addStudentStatusLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        studentStatusLabelLayout.setVerticalGroup(
            studentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentStatusLabelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentIDLabel)
                    .addComponent(studentIDTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(studentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(studentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addStudentSubmitButton)
                .addGap(11, 11, 11)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentStatusLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentStatusLabelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(studentStatusLabelLayout.createSequentialGroup()
                        .addComponent(addStudentStatusLabel)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jTabbedPane2.addTab("Add Student", studentStatusLabel);

        courseCodeLabel.setText("Course Code: ");

        courseCodeTextField.setColumns(20);

        courseDescriptionLabel.setText("Course Description: ");

        seatsLabel.setText("Seats: ");

        addCourseSubmitButton.setText("Submit");
        addCourseSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseSubmitButtonActionPerformed(evt);
            }
        });

        addCourseStatusLabel.setText("        ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(courseCodeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(courseCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(courseDescriptionLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(courseDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseSubmitButton)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(seatsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(seatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(addCourseStatusLabel))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseCodeLabel)
                    .addComponent(courseCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseDescriptionLabel)
                    .addComponent(courseDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCourseSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCourseStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Course", jPanel4);

        jLabel11.setText("Select Course: ");

        selectCourseForDisplayCourseListComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displayCourseListOfStudentsButton.setText("Display");
        displayCourseListOfStudentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCourseListOfStudentsButtonActionPerformed(evt);
            }
        });

        jLabel12.setText("Scheduled Students");

        scheduledStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane3.setViewportView(scheduledStudentsTable);

        jLabel13.setText("Waitlisted Students");

        waitlistedStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane4.setViewportView(waitlistedStudentsTable);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectCourseForDisplayCourseListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(displayCourseListOfStudentsButton))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(selectCourseForDisplayCourseListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayCourseListOfStudentsButton))
                .addGap(27, 27, 27)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Display Course List of Students", jPanel9);

        jLabel14.setText("Select Student: ");

        selectStudentForDropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropStudentButton.setText("Drop Student");
        dropStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentButtonActionPerformed(evt);
            }
        });

        dropStudentTextArea.setColumns(20);
        dropStudentTextArea.setRows(5);
        jScrollPane5.setViewportView(dropStudentTextArea);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectStudentForDropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dropStudentButton)))
                .addContainerGap(363, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(selectStudentForDropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropStudentButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Student", jPanel10);

        jLabel15.setText("Select Course to be Dropped: ");

        dropCourseAdminComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropCourseAdminButton.setText("Drop Course");
        dropCourseAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropCourseAdminButtonActionPerformed(evt);
            }
        });

        dropCourseTextArea.setColumns(20);
        dropCourseTextArea.setRows(5);
        jScrollPane6.setViewportView(dropCourseTextArea);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dropCourseAdminComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dropCourseAdminButton)))
                .addContainerGap(350, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(dropCourseAdminComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropCourseAdminButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Course", jPanel11);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Admin", jPanel1);

        jLabel6.setText("Choose a Course: ");

        courseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        courseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setText("Choose a Student: ");

        addCourseForStudentSubmitButton.setText("Submit");
        addCourseForStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseForStudentSubmitButtonActionPerformed(evt);
            }
        });

        studentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(courseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scheduleCourseStatusLabel)
                    .addComponent(addCourseForStudentSubmitButton))
                .addContainerGap(778, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(courseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(studentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(addCourseForStudentSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scheduleCourseStatusLabel)
                .addContainerGap(419, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Schedule Course", jPanel6);

        jLabel5.setText("Select Student: ");

        displayScheduleButton.setText("Display");
        displayScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayScheduleButtonActionPerformed(evt);
            }
        });

        studentComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displayScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ));
        jScrollPane2.setViewportView(displayScheduleTable);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(studentComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(displayScheduleButton)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(studentComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayScheduleButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Display Schedule", jPanel7);

        displayCoursesButton.setText("Display");
        displayCoursesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCoursesButtonActionPerformed(evt);
            }
        });

        displayCoursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ));
        jScrollPane1.setViewportView(displayCoursesTable);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayCoursesButton)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayCoursesButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Display Courses", jPanel8);

        jLabel9.setText("Select Course: ");

        dropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setText("Select Student: ");

        studentComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropCourseButton.setText("Drop Course");
        dropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropCourseButtonActionPerformed(evt);
            }
        });

        dropCourseStudentTextArea.setColumns(20);
        dropCourseStudentTextArea.setRows(5);
        jScrollPane7.setViewportView(dropCourseStudentTextArea);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dropCourseButton))
                .addContainerGap(441, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(studentComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(dropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dropCourseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(260, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Drop Course", jPanel5);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        jTabbedPane1.addTab("Student", jPanel2);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(changeSemesterButton)
                                .addGap(80, 80, 80))))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(444, 444, 444))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        // TODO add your handling code here:
        //Get the string of the current item selected in the combo box
        String currentString=currentSemesterComboBox.getSelectedItem().toString();
        
        //Update the current semester label and change the current semester
        currentSemesterLabel.setText(currentString);
        currentSemester=currentString;
        
        //Rebuild the course combo boxes
        rebuildCourseComboBoxes();
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void displayCoursesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCoursesButtonActionPerformed
        // TODO add your handling code here:
        //Use a table to display all the courses in a given semester
        //Get an ArrayList of courses for the current semester
        ArrayList<CourseEntry> courses=CourseQueries.getAllCourses(currentSemester);
        //Get the model for the courses table
        DefaultTableModel displayCoursesTableModel=(DefaultTableModel)displayCoursesTable.getModel();

        //Clears out rows that were in the table before
        displayCoursesTableModel.setNumRows(0);
        //Create an object array with 3 columns of data
        Object[] rowData=new Object[3];

        for (CourseEntry course:courses)
        {
            //Put the courseCode, description, and seats in the rowData array
            rowData[0]=course.getCourseCode();
            rowData[1]=course.getDescription();
            rowData[2]=course.getMaxStudents();
            //Add the row to the table
            displayCoursesTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_displayCoursesButtonActionPerformed

    private void displayScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayScheduleButtonActionPerformed
        // TODO add your handling code here:
        //Use a table to display all the courses a student is taking in a given semester
        
        //Get the index of the studentComboBox
        int studentIdIndex=studentComboBox2.getSelectedIndex();
        
        //Bring in the arrayList of students
        ArrayList<StudentEntry> students=StudentQueries.getAllStudents();
        //Get the studentId by accessing the studentEntry object using the index and getting the id
        StudentEntry student=students.get(studentIdIndex);
        String studentId=student.getId();
       
        //Get an ArrayList of courses that the student is taking
        ArrayList<ScheduleEntry> studentEntries=ScheduleQueries.getScheduleByStudent(currentSemester,studentId);
        //Get the model for the schedule table
        DefaultTableModel displayScheduleTableModel=(DefaultTableModel)displayScheduleTable.getModel();

        //Clears out rows that were in the table before
        displayScheduleTableModel.setNumRows(0);
        //Create an object array with 2 columns of data
        Object[] rowData=new Object[2];

        for (ScheduleEntry entry:studentEntries)
        {
            //Put the courseCode and status in the rowData array
            rowData[0]=entry.getCourseCode();
            rowData[1]=entry.getStatus();

            //Add the row to the table
            displayScheduleTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_displayScheduleButtonActionPerformed

    private void addCourseForStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseForStudentSubmitButtonActionPerformed
        // TODO add your handling code here:
        //Get the courseCode and student from the combo boxes
        String courseCode=courseComboBox.getItemAt(courseComboBox.getSelectedIndex());
        
        //Get the index of the studentComboBox
        int studentIdIndex=studentComboBox.getSelectedIndex();
        //Bring in the arrayList of students
        ArrayList<StudentEntry> students=StudentQueries.getAllStudents();
        //Get the studentId by accessing the studentEntry object using the index and getting the id
        StudentEntry student=students.get(studentIdIndex);
        String studentId=student.getId();

        //Get the timeStamp
        Timestamp timeStamp=new Timestamp(System.currentTimeMillis());

        //Determine the status by calling the getScheduledStudentCountMethod from ScheduleQueries and getCourseSeats from CourseQueries
        int numberOfStudentsScheduled=ScheduleQueries.getScheduledStudentCount(currentSemester, courseCode); //Current seats in that course
        int courseSeats=CourseQueries.getCourseSeats(currentSemester, courseCode); //Maximum amount of seats for that course

        //Determine the status for the student
        String status;
        if (numberOfStudentsScheduled<courseSeats)
        {
            status="S";
            scheduleCourseStatusLabel.setText(student + " has been added to the class.");
        }
        else
        {
            status="W";
            scheduleCourseStatusLabel.setText(student + " has been waitlisted for the class.");
        }
        //Create a scheduleEntry object
        ScheduleEntry scheduleEntry=new ScheduleEntry(currentSemester,courseCode,studentId,status,timeStamp);
        //Add the object to the database
        ScheduleQueries.addScheduleEntry(scheduleEntry);
    }//GEN-LAST:event_addCourseForStudentSubmitButtonActionPerformed

    private void courseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseComboBoxActionPerformed

    private void addCourseSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseSubmitButtonActionPerformed
        // TODO add your handling code here:
        //Get the courseCode and description from textfields
        String courseCode=courseCodeTextField.getText();
        String description=courseDescriptionTextField.getText();
        //Get the seats from the spinner
        int seats=(int)seatsSpinner.getValue();//Convert the text to an integer

        //Create a courseEntry object
        CourseEntry course=new CourseEntry(currentSemester,courseCode,description,seats);

        //Add a course to the database
        CourseQueries.addCourse(course);

        //Update the status label of the course
        addCourseStatusLabel.setText(courseCode + " has been added.");

        //Rebuild Course combo boxes
        rebuildCourseComboBoxes();
    }//GEN-LAST:event_addCourseSubmitButtonActionPerformed

    private void addStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentSubmitButtonActionPerformed
        // TODO add your handling code here:
        //Get the StudentID, firstName, and lastName strings from the text fields
        String studentID=studentIDTextField1.getText();
        String firstName=firstNameTextField.getText();
        String lastName=lastNameTextField.getText();

        //Create a StudentEntry object
        StudentEntry student=new StudentEntry(studentID,firstName,lastName);

        //Add a student to the database
        StudentQueries.addStudent(student);

        //Update the status label of the student
        addStudentStatusLabel.setText(firstName + " " + lastName + " was added.");

        //Rebuild the student combo boxes
        rebuildStudentComboBoxes();
    }//GEN-LAST:event_addStudentSubmitButtonActionPerformed

    private void firstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextFieldActionPerformed

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        //Get the String of the semester that the user has typed in
        String semester = semesterTextField1.getText();

        //Add the semester to the Semester table
        SemesterQueries.addSemester(semester);

        //Tell the user what happened
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");

        //Update the combo boxes
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void semesterTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semesterTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_semesterTextField1ActionPerformed

    private void dropStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentButtonActionPerformed
        // TODO add your handling code here:
        //Clear the text area
        dropStudentTextArea.setText("");
        //Get the studentId that will be dropped from the course
        //Get the index of the selectStudentForDropStudentComboBox
        int studentIdIndex=selectStudentForDropStudentComboBox.getSelectedIndex();
        //Bring in the arrayList of students
        ArrayList<StudentEntry> students=StudentQueries.getAllStudents();
        StudentEntry student=students.get(studentIdIndex);
        String studentId=student.getId();
        
        //Drop the student from the Student table
        StudentQueries.dropStudent(studentId);
        //Rebuild the studentComboBoxes
        rebuildStudentComboBoxes();
        //Update the text area
        dropStudentTextArea.append(student + " has been dropped from the list of students.");
        
        //Remove the student from any courses scheduled in for all semesters
        //Get the arrayList of semester
        ArrayList<String> semesters=SemesterQueries.getSemesterList();
        
        //Use an outer for loop to go through each semester
        for(String semester:semesters)
        {
            //Display what happened in each semester
            dropStudentTextArea.append("\n\n For Semester: " + semester);
            
            //Get the arrayList of schedule entries for that student
            ArrayList<ScheduleEntry> studentCourses=ScheduleQueries.getScheduleByStudent(semester,studentId);
            
            //Use this for loop to display that the courses that the student has been dropped from in their schedule
            for (ScheduleEntry course:studentCourses)
            {
                if (course.getStatus().equals("S"))
                {
                    //Display that the student has been dropped from their scheduled classes
                    dropStudentTextArea.append("\n" + student + " has been dropped from " + course.getCourseCode());
                }
            }
            
            //Use this for loop to display students that will be scheduled into the course
            for (ScheduleEntry course:studentCourses)
            {
                //Call dropStudentScheduleByCourse for each course
                ScheduleQueries.dropStudentScheduleByCourse(semester, studentId, course.getCourseCode());
                
                //Get the waitlisted students for that course
                ArrayList<ScheduleEntry> waitlistedStudents=ScheduleQueries.getWaitlistedStudentsByCourse(semester, course.getCourseCode());
                
                //Schedule the first student on the waitlist if there is a waitlist
                if (waitlistedStudents.size()>0)
                {
                    //Get the student to be scheduled in for that course
                    ScheduleEntry nextStudentEntry=waitlistedStudents.get(0);
                    //Update the scheduleEntry in the Schedule table for that student
                    ScheduleQueries.updateScheduleEntry(semester, nextStudentEntry); 
                    //Get the student object of the new student to be added
                    StudentEntry newStudent=StudentQueries.getStudent(nextStudentEntry.getStudentId());
                    //Update the text area to say that the student was scheduled in for what course
                    dropStudentTextArea.append("\n" + newStudent + " has been scheduled into " + nextStudentEntry.getCourseCode());
                }
                
            }
            
            //Use this for loop to display that the courses that the student has been dropped from in the waitlist
            for (ScheduleEntry course:studentCourses)
            {
                if (course.getStatus().equals("W"))
                {
                    //Display that the student has been dropped from their scheduled classes
                    dropStudentTextArea.append("\n" + student + " has been dropped from the waitlist for " + course.getCourseCode());
                }
            }
            
        }
        //Display that the student has been dropped from all student combo boxes
        dropStudentTextArea.append("\n\n" + student + " has been removed from all student comboboxes");
    }//GEN-LAST:event_dropStudentButtonActionPerformed

    private void dropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropCourseButtonActionPerformed
        // TODO add your handling code here:
        //Clear the text area
        dropCourseStudentTextArea.setText("");
        //Get the courseCode and student object from the combo boxes
        String courseCode=dropCourseComboBox.getItemAt(dropCourseComboBox.getSelectedIndex());
        
        //Get the index of the studentComboBox
        int studentIdIndex=studentComboBox3.getSelectedIndex();
        //Bring in the arrayList of students
        ArrayList<StudentEntry> students=StudentQueries.getAllStudents();
        //Get the studentId by accessing the studentEntry object using the index and getting the id
        StudentEntry student=students.get(studentIdIndex);
        String studentId=student.getId();
        
        //Drop the course for the student
        ScheduleQueries.dropStudentScheduleByCourse(currentSemester,studentId, courseCode);
        
        //Schedule the first student on the waitlist for the course
        //Get the waitlisted students 
        ArrayList<ScheduleEntry> waitlistedStudents=ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester,courseCode);
        
        //Modify the status text area to say the student was dropped
        dropCourseStudentTextArea.append(student + " has been dropped from " + courseCode);
        
        //Check if there is a waitlist
        if (waitlistedStudents.size()>0)
        {
            //Get the first entry from the array list, so that new student can be scheduled into the class
            ScheduleEntry firstEntry=waitlistedStudents.get(0);
            //Update the schedule entry in the Schedule table
            ScheduleQueries.updateScheduleEntry(currentSemester,firstEntry);
            //Get the student object of the new student to be added
            StudentEntry newStudent=StudentQueries.getStudent(firstEntry.getStudentId());
            //Modify the status text area to say the new student was added
            dropCourseStudentTextArea.append("\n" + newStudent + " has been scheduled into " + courseCode);
        }
        
    }//GEN-LAST:event_dropCourseButtonActionPerformed

    private void displayCourseListOfStudentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayCourseListOfStudentsButtonActionPerformed
        // TODO add your handling code here:
        //Get the specified course
        String courseCode=selectCourseForDisplayCourseListComboBox.getItemAt(selectCourseForDisplayCourseListComboBox.getSelectedIndex());
        
        //Get the scheduled students by course and the waitlisted students by course
        ArrayList<ScheduleEntry> scheduledStudents=ScheduleQueries.getScheduledStudentsByCourse(currentSemester,courseCode);
        ArrayList<ScheduleEntry> waitlistedStudents=ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester,courseCode);
        
        //Get the model for the scheduledStudents table
        DefaultTableModel scheduledStudentsTableModel=(DefaultTableModel)scheduledStudentsTable.getModel();

        //Clears out rows that were in the table before
        scheduledStudentsTableModel.setNumRows(0);
        //Create an object array with 3 columns of data
        Object[] rowData=new Object[3];
        
        for (ScheduleEntry scheduledStudent:scheduledStudents)
        {
            //Put the first name, last name, and studentId in the rowData array
            //Get the studentEntry object using the studentId
            StudentEntry student=StudentQueries.getStudent(scheduledStudent.getStudentId());
            rowData[0]=student.getLastName();
            rowData[1]=student.getFirstName();
            rowData[2]=student.getId();

            //Add the row to the table
            scheduledStudentsTableModel.addRow(rowData);
        }
        
        //Get the model for the waitlistedStudents table
        DefaultTableModel waitlistedStudentsTableModel=(DefaultTableModel)waitlistedStudentsTable.getModel();

        //Clears out rows that were in the table before
        waitlistedStudentsTableModel.setNumRows(0);
        //Create an object array with 3 columns of data
        Object[] rowData2=new Object[3];

        for (ScheduleEntry waitlistedStudent:waitlistedStudents)
        {
            //Put the first name, last name, and studentId in the rowData array
            //Get the studentEntry object using the studentId
            StudentEntry student=StudentQueries.getStudent(waitlistedStudent.getStudentId());
            rowData2[0]=student.getLastName();
            rowData2[1]=student.getFirstName();
            rowData2[2]=student.getId();

            //Add the row to the table
            waitlistedStudentsTableModel.addRow(rowData2);
        }
        
        
    }//GEN-LAST:event_displayCourseListOfStudentsButtonActionPerformed

    private void dropCourseAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropCourseAdminButtonActionPerformed
        // TODO add your handling code here:
        //Get the courseCode from the combo box
        String courseCode=dropCourseAdminComboBox.getItemAt(dropCourseAdminComboBox.getSelectedIndex());
        //Drop the course from the Course table
        CourseQueries.dropCourse(currentSemester, courseCode);
        //Rebuild the comboBoxes
        rebuildCourseComboBoxes();
        
        //Get the schedule and waitlisted students for the course to be dropped
        ArrayList<ScheduleEntry> scheduledStudents=ScheduleQueries.getScheduledStudentsByCourse(currentSemester, courseCode);
        ArrayList<ScheduleEntry> waitlistedStudents=ScheduleQueries.getWaitlistedStudentsByCourse(currentSemester, courseCode);
        
        dropCourseTextArea.append("Scheduled students dropped from the course:");
        //Iterate through each scheduledStudent
        for (ScheduleEntry scheduledStudent:scheduledStudents)
        {
            //Get the studentEntry object
            StudentEntry student=StudentQueries.getStudent(scheduledStudent.getStudentId());
            //Update the text area to display that they will be dropped from the course
            dropCourseTextArea.append("\n" + student + " has been dropped from " + courseCode + ".");
        }
        
        dropCourseTextArea.append("\n\nWaitlisted students dropped from the course:");
        //Iterate through each waitlistedStudent
        for (ScheduleEntry waitlistedStudent:waitlistedStudents)
        {
            //Get the studentEntry object
            StudentEntry student=StudentQueries.getStudent(waitlistedStudent.getStudentId());
            //Update the text area to display that they will be dropped from the course
            dropCourseTextArea.append("\n" + student + " has been dropped from the course" + courseCode + ".");
        }
        
        //Remove all the students scheduled and waitlisted from the Schedule table
        ScheduleQueries.dropScheduleByCourse(currentSemester, courseCode);
    }//GEN-LAST:event_dropCourseAdminButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCourseForStudentSubmitButton;
    private javax.swing.JLabel addCourseStatusLabel;
    private javax.swing.JButton addCourseSubmitButton;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JLabel addStudentStatusLabel;
    private javax.swing.JButton addStudentSubmitButton;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JLabel courseCodeLabel;
    private javax.swing.JTextField courseCodeTextField;
    private javax.swing.JComboBox<String> courseComboBox;
    private javax.swing.JLabel courseDescriptionLabel;
    private javax.swing.JTextField courseDescriptionTextField;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JButton displayCourseListOfStudentsButton;
    private javax.swing.JButton displayCoursesButton;
    private javax.swing.JTable displayCoursesTable;
    private javax.swing.JButton displayScheduleButton;
    private javax.swing.JTable displayScheduleTable;
    private javax.swing.JButton dropCourseAdminButton;
    private javax.swing.JComboBox<String> dropCourseAdminComboBox;
    private javax.swing.JButton dropCourseButton;
    private javax.swing.JComboBox<String> dropCourseComboBox;
    private javax.swing.JTextArea dropCourseStudentTextArea;
    private javax.swing.JTextArea dropCourseTextArea;
    private javax.swing.JButton dropStudentButton;
    private javax.swing.JTextArea dropStudentTextArea;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel scheduleCourseStatusLabel;
    private javax.swing.JTable scheduledStudentsTable;
    private javax.swing.JLabel seatsLabel;
    private javax.swing.JSpinner seatsSpinner;
    private javax.swing.JComboBox<String> selectCourseForDisplayCourseListComboBox;
    private javax.swing.JComboBox<String> selectStudentForDropStudentComboBox;
    private javax.swing.JLabel semesterLabel;
    private javax.swing.JTextField semesterTextField1;
    private javax.swing.JComboBox<String> studentComboBox;
    private javax.swing.JComboBox<String> studentComboBox2;
    private javax.swing.JComboBox<String> studentComboBox3;
    private javax.swing.JLabel studentIDLabel;
    private javax.swing.JTextField studentIDTextField1;
    private javax.swing.JPanel studentStatusLabel;
    private javax.swing.JTable waitlistedStudentsTable;
    // End of variables declaration//GEN-END:variables
}
